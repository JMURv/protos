// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: api/pb/products.proto

package users

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{0}
}

type UuidMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *UuidMsg) Reset() {
	*x = UuidMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UuidMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UuidMsg) ProtoMessage() {}

func (x *UuidMsg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UuidMsg.ProtoReflect.Descriptor instead.
func (*UuidMsg) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{1}
}

func (x *UuidMsg) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SlugMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *SlugMsg) Reset() {
	*x = SlugMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlugMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlugMsg) ProtoMessage() {}

func (x *SlugMsg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlugMsg.ProtoReflect.Descriptor instead.
func (*SlugMsg) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{2}
}

func (x *SlugMsg) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type ListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListReq) Reset() {
	*x = ListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReq) ProtoMessage() {}

func (x *ListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReq.ProtoReflect.Descriptor instead.
func (*ListReq) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{3}
}

func (x *ListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListReq) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Page  uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size  uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SearchReq) Reset() {
	*x = SearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReq) ProtoMessage() {}

func (x *SearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReq.ProtoReflect.Descriptor instead.
func (*SearchReq) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{4}
}

func (x *SearchReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchReq) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CategoryMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug               string                 `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Title              string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ProductQuantity    uint64                 `protobuf:"varint,3,opt,name=product_quantity,json=productQuantity,proto3" json:"product_quantity,omitempty"`
	Src                string                 `protobuf:"bytes,4,opt,name=src,proto3" json:"src,omitempty"`
	Alt                string                 `protobuf:"bytes,5,opt,name=alt,proto3" json:"alt,omitempty"`
	ParentSlug         string                 `protobuf:"bytes,6,opt,name=parent_slug,json=parentSlug,proto3" json:"parent_slug,omitempty"`
	Parent_CategoryMsg *CategoryMsg           `protobuf:"bytes,7,opt,name=parent_CategoryMsg,json=parentCategoryMsg,proto3" json:"parent_CategoryMsg,omitempty"`
	Children           []*CategoryMsg         `protobuf:"bytes,8,rep,name=children,proto3" json:"children,omitempty"`
	Items              []*ItemMsg             `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty"`
	Filters            []*Filter              `protobuf:"bytes,10,rep,name=filters,proto3" json:"filters,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CategoryMsg) Reset() {
	*x = CategoryMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryMsg) ProtoMessage() {}

func (x *CategoryMsg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryMsg.ProtoReflect.Descriptor instead.
func (*CategoryMsg) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{5}
}

func (x *CategoryMsg) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *CategoryMsg) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CategoryMsg) GetProductQuantity() uint64 {
	if x != nil {
		return x.ProductQuantity
	}
	return 0
}

func (x *CategoryMsg) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *CategoryMsg) GetAlt() string {
	if x != nil {
		return x.Alt
	}
	return ""
}

func (x *CategoryMsg) GetParentSlug() string {
	if x != nil {
		return x.ParentSlug
	}
	return ""
}

func (x *CategoryMsg) GetParent_CategoryMsg() *CategoryMsg {
	if x != nil {
		return x.Parent_CategoryMsg
	}
	return nil
}

func (x *CategoryMsg) GetChildren() []*CategoryMsg {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *CategoryMsg) GetItems() []*ItemMsg {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CategoryMsg) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *CategoryMsg) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CategoryMsg) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CategoryWithSlug struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug     string       `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Category *CategoryMsg `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *CategoryWithSlug) Reset() {
	*x = CategoryWithSlug{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryWithSlug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryWithSlug) ProtoMessage() {}

func (x *CategoryWithSlug) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryWithSlug.ProtoReflect.Descriptor instead.
func (*CategoryWithSlug) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{6}
}

func (x *CategoryWithSlug) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *CategoryWithSlug) GetCategory() *CategoryMsg {
	if x != nil {
		return x.Category
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Values       []string               `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	CategorySlug string                 `protobuf:"bytes,4,opt,name=category_slug,json=categorySlug,proto3" json:"category_slug,omitempty"`
	FilterType   string                 `protobuf:"bytes,5,opt,name=filter_type,json=filterType,proto3" json:"filter_type,omitempty"`
	MinValue     float32                `protobuf:"fixed32,6,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue     float32                `protobuf:"fixed32,7,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{7}
}

func (x *Filter) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Filter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Filter) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Filter) GetCategorySlug() string {
	if x != nil {
		return x.CategorySlug
	}
	return ""
}

func (x *Filter) GetFilterType() string {
	if x != nil {
		return x.FilterType
	}
	return ""
}

func (x *Filter) GetMinValue() float32 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *Filter) GetMaxValue() float32 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *Filter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Filter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ItemMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Article         string                 `protobuf:"bytes,2,opt,name=article,proto3" json:"article,omitempty"`
	Title           string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description     string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Price           float32                `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
	QuantityInStock uint32                 `protobuf:"varint,6,opt,name=quantity_in_stock,json=quantityInStock,proto3" json:"quantity_in_stock,omitempty"`
	Src             string                 `protobuf:"bytes,7,opt,name=src,proto3" json:"src,omitempty"`
	Alt             string                 `protobuf:"bytes,8,opt,name=alt,proto3" json:"alt,omitempty"`
	InStock         bool                   `protobuf:"varint,9,opt,name=in_stock,json=inStock,proto3" json:"in_stock,omitempty"`
	IsHit           bool                   `protobuf:"varint,10,opt,name=is_hit,json=isHit,proto3" json:"is_hit,omitempty"`
	IsRec           bool                   `protobuf:"varint,11,opt,name=is_rec,json=isRec,proto3" json:"is_rec,omitempty"`
	ParentItemId    string                 `protobuf:"bytes,12,opt,name=parent_item_id,json=parentItemId,proto3" json:"parent_item_id,omitempty"`
	Categories      []*CategoryMsg         `protobuf:"bytes,13,rep,name=categories,proto3" json:"categories,omitempty"`
	Media           []*ItemMedia           `protobuf:"bytes,14,rep,name=media,proto3" json:"media,omitempty"`
	Attributes      []*ItemAttribute       `protobuf:"bytes,15,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Variants        []*ItemMsg             `protobuf:"bytes,16,rep,name=variants,proto3" json:"variants,omitempty"`
	RelatedProducts []*RelatedProduct      `protobuf:"bytes,17,rep,name=related_products,json=relatedProducts,proto3" json:"related_products,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ItemMsg) Reset() {
	*x = ItemMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemMsg) ProtoMessage() {}

func (x *ItemMsg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemMsg.ProtoReflect.Descriptor instead.
func (*ItemMsg) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{8}
}

func (x *ItemMsg) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ItemMsg) GetArticle() string {
	if x != nil {
		return x.Article
	}
	return ""
}

func (x *ItemMsg) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ItemMsg) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ItemMsg) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ItemMsg) GetQuantityInStock() uint32 {
	if x != nil {
		return x.QuantityInStock
	}
	return 0
}

func (x *ItemMsg) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *ItemMsg) GetAlt() string {
	if x != nil {
		return x.Alt
	}
	return ""
}

func (x *ItemMsg) GetInStock() bool {
	if x != nil {
		return x.InStock
	}
	return false
}

func (x *ItemMsg) GetIsHit() bool {
	if x != nil {
		return x.IsHit
	}
	return false
}

func (x *ItemMsg) GetIsRec() bool {
	if x != nil {
		return x.IsRec
	}
	return false
}

func (x *ItemMsg) GetParentItemId() string {
	if x != nil {
		return x.ParentItemId
	}
	return ""
}

func (x *ItemMsg) GetCategories() []*CategoryMsg {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ItemMsg) GetMedia() []*ItemMedia {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *ItemMsg) GetAttributes() []*ItemAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ItemMsg) GetVariants() []*ItemMsg {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *ItemMsg) GetRelatedProducts() []*RelatedProduct {
	if x != nil {
		return x.RelatedProducts
	}
	return nil
}

func (x *ItemMsg) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ItemMsg) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ItemMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Src       string                 `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
	Alt       string                 `protobuf:"bytes,3,opt,name=alt,proto3" json:"alt,omitempty"`
	ItemId    string                 `protobuf:"bytes,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ItemMedia) Reset() {
	*x = ItemMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemMedia) ProtoMessage() {}

func (x *ItemMedia) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemMedia.ProtoReflect.Descriptor instead.
func (*ItemMedia) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{9}
}

func (x *ItemMedia) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemMedia) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *ItemMedia) GetAlt() string {
	if x != nil {
		return x.Alt
	}
	return ""
}

func (x *ItemMedia) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemMedia) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ItemMedia) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ItemAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value     string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	ItemId    string                 `protobuf:"bytes,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ItemAttribute) Reset() {
	*x = ItemAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemAttribute) ProtoMessage() {}

func (x *ItemAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemAttribute.ProtoReflect.Descriptor instead.
func (*ItemAttribute) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{10}
}

func (x *ItemAttribute) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemAttribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemAttribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ItemAttribute) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemAttribute) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ItemAttribute) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type RelatedProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemId        string                 `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	RelatedItemId string                 `protobuf:"bytes,3,opt,name=related_item_id,json=relatedItemId,proto3" json:"related_item_id,omitempty"`
	RelatedItem   *ItemMsg               `protobuf:"bytes,4,opt,name=related_item,json=relatedItem,proto3" json:"related_item,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RelatedProduct) Reset() {
	*x = RelatedProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedProduct) ProtoMessage() {}

func (x *RelatedProduct) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedProduct.ProtoReflect.Descriptor instead.
func (*RelatedProduct) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{11}
}

func (x *RelatedProduct) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RelatedProduct) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *RelatedProduct) GetRelatedItemId() string {
	if x != nil {
		return x.RelatedItemId
	}
	return ""
}

func (x *RelatedProduct) GetRelatedItem() *ItemMsg {
	if x != nil {
		return x.RelatedItem
	}
	return nil
}

func (x *RelatedProduct) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RelatedProduct) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListCategoryItemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         string `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Size         string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Sort         string `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	CategorySlug string `protobuf:"bytes,4,opt,name=category_slug,json=categorySlug,proto3" json:"category_slug,omitempty"`
}

func (x *ListCategoryItemsReq) Reset() {
	*x = ListCategoryItemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCategoryItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoryItemsReq) ProtoMessage() {}

func (x *ListCategoryItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoryItemsReq.ProtoReflect.Descriptor instead.
func (*ListCategoryItemsReq) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{12}
}

func (x *ListCategoryItemsReq) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *ListCategoryItemsReq) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ListCategoryItemsReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListCategoryItemsReq) GetCategorySlug() string {
	if x != nil {
		return x.CategorySlug
	}
	return ""
}

type RelatedItemsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RelatedProduct `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RelatedItemsList) Reset() {
	*x = RelatedItemsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedItemsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedItemsList) ProtoMessage() {}

func (x *RelatedItemsList) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedItemsList.ProtoReflect.Descriptor instead.
func (*RelatedItemsList) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{13}
}

func (x *RelatedItemsList) GetItems() []*RelatedProduct {
	if x != nil {
		return x.Items
	}
	return nil
}

type ItemWithUid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ItemMsg `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Uid  string   `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ItemWithUid) Reset() {
	*x = ItemWithUid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemWithUid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemWithUid) ProtoMessage() {}

func (x *ItemWithUid) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemWithUid.ProtoReflect.Descriptor instead.
func (*ItemWithUid) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{14}
}

func (x *ItemWithUid) GetItem() *ItemMsg {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ItemWithUid) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type PaginatedItemRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []*ItemMsg `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Count       int64      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	TotalPages  int64      `protobuf:"varint,3,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	CurrentPage int64      `protobuf:"varint,4,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	HasNextPage bool       `protobuf:"varint,5,opt,name=has_next_page,json=hasNextPage,proto3" json:"has_next_page,omitempty"`
}

func (x *PaginatedItemRes) Reset() {
	*x = PaginatedItemRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginatedItemRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedItemRes) ProtoMessage() {}

func (x *PaginatedItemRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedItemRes.ProtoReflect.Descriptor instead.
func (*PaginatedItemRes) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{15}
}

func (x *PaginatedItemRes) GetData() []*ItemMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PaginatedItemRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PaginatedItemRes) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *PaginatedItemRes) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *PaginatedItemRes) GetHasNextPage() bool {
	if x != nil {
		return x.HasNextPage
	}
	return false
}

type PaginatedCategoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []*CategoryMsg `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Count       int64          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	TotalPages  int64          `protobuf:"varint,3,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	CurrentPage int64          `protobuf:"varint,4,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	HasNextPage bool           `protobuf:"varint,5,opt,name=has_next_page,json=hasNextPage,proto3" json:"has_next_page,omitempty"`
}

func (x *PaginatedCategoryRes) Reset() {
	*x = PaginatedCategoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginatedCategoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedCategoryRes) ProtoMessage() {}

func (x *PaginatedCategoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedCategoryRes.ProtoReflect.Descriptor instead.
func (*PaginatedCategoryRes) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{16}
}

func (x *PaginatedCategoryRes) GetData() []*CategoryMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PaginatedCategoryRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PaginatedCategoryRes) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *PaginatedCategoryRes) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *PaginatedCategoryRes) GetHasNextPage() bool {
	if x != nil {
		return x.HasNextPage
	}
	return false
}

type FilterListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Filter `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FilterListRes) Reset() {
	*x = FilterListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterListRes) ProtoMessage() {}

func (x *FilterListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterListRes.ProtoReflect.Descriptor instead.
func (*FilterListRes) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{17}
}

func (x *FilterListRes) GetData() []*Filter {
	if x != nil {
		return x.Data
	}
	return nil
}

type PaginatedFilterRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []*Filter `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Count       int64     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	TotalPages  int64     `protobuf:"varint,3,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	CurrentPage int64     `protobuf:"varint,4,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	HasNextPage bool      `protobuf:"varint,5,opt,name=has_next_page,json=hasNextPage,proto3" json:"has_next_page,omitempty"`
}

func (x *PaginatedFilterRes) Reset() {
	*x = PaginatedFilterRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginatedFilterRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedFilterRes) ProtoMessage() {}

func (x *PaginatedFilterRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedFilterRes.ProtoReflect.Descriptor instead.
func (*PaginatedFilterRes) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{18}
}

func (x *PaginatedFilterRes) GetData() []*Filter {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PaginatedFilterRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PaginatedFilterRes) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *PaginatedFilterRes) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *PaginatedFilterRes) GetHasNextPage() bool {
	if x != nil {
		return x.HasNextPage
	}
	return false
}

type FavoriteMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ItemId    string                 `protobuf:"bytes,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Item      *ItemMsg               `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *FavoriteMsg) Reset() {
	*x = FavoriteMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteMsg) ProtoMessage() {}

func (x *FavoriteMsg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteMsg.ProtoReflect.Descriptor instead.
func (*FavoriteMsg) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{19}
}

func (x *FavoriteMsg) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FavoriteMsg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FavoriteMsg) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *FavoriteMsg) GetItem() *ItemMsg {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *FavoriteMsg) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FavoriteMsg) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type FavoriteListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*FavoriteMsg `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FavoriteListMsg) Reset() {
	*x = FavoriteListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteListMsg) ProtoMessage() {}

func (x *FavoriteListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteListMsg.ProtoReflect.Descriptor instead.
func (*FavoriteListMsg) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{20}
}

func (x *FavoriteListMsg) GetData() []*FavoriteMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserAndItemIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ItemId string `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *UserAndItemIds) Reset() {
	*x = UserAndItemIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAndItemIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAndItemIds) ProtoMessage() {}

func (x *UserAndItemIds) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAndItemIds.ProtoReflect.Descriptor instead.
func (*UserAndItemIds) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{21}
}

func (x *UserAndItemIds) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAndItemIds) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type PromoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug        string                 `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Src         string                 `protobuf:"bytes,4,opt,name=src,proto3" json:"src,omitempty"`
	Alt         string                 `protobuf:"bytes,5,opt,name=alt,proto3" json:"alt,omitempty"`
	LastsTo     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=lasts_to,json=lastsTo,proto3" json:"lasts_to,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PromoMsg) Reset() {
	*x = PromoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoMsg) ProtoMessage() {}

func (x *PromoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoMsg.ProtoReflect.Descriptor instead.
func (*PromoMsg) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{22}
}

func (x *PromoMsg) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *PromoMsg) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PromoMsg) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PromoMsg) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *PromoMsg) GetAlt() string {
	if x != nil {
		return x.Alt
	}
	return ""
}

func (x *PromoMsg) GetLastsTo() *timestamppb.Timestamp {
	if x != nil {
		return x.LastsTo
	}
	return nil
}

func (x *PromoMsg) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PromoMsg) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type PromoWithSlug struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string    `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Data *PromoMsg `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PromoWithSlug) Reset() {
	*x = PromoWithSlug{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoWithSlug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoWithSlug) ProtoMessage() {}

func (x *PromoWithSlug) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoWithSlug.ProtoReflect.Descriptor instead.
func (*PromoWithSlug) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{23}
}

func (x *PromoWithSlug) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *PromoWithSlug) GetData() *PromoMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

type PromoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Discount      uint32                 `protobuf:"varint,2,opt,name=discount,proto3" json:"discount,omitempty"`
	PromotionSlug string                 `protobuf:"bytes,3,opt,name=promotion_slug,json=promotionSlug,proto3" json:"promotion_slug,omitempty"`
	ItemId        string                 `protobuf:"bytes,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Item          *ItemMsg               `protobuf:"bytes,5,opt,name=item,proto3" json:"item,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PromoItem) Reset() {
	*x = PromoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoItem) ProtoMessage() {}

func (x *PromoItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoItem.ProtoReflect.Descriptor instead.
func (*PromoItem) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{24}
}

func (x *PromoItem) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PromoItem) GetDiscount() uint32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *PromoItem) GetPromotionSlug() string {
	if x != nil {
		return x.PromotionSlug
	}
	return ""
}

func (x *PromoItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *PromoItem) GetItem() *ItemMsg {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *PromoItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PromoItem) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type PaginatedPromoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []*PromoMsg `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Count       int64       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	TotalPages  int64       `protobuf:"varint,3,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	CurrentPage int64       `protobuf:"varint,4,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	HasNextPage bool        `protobuf:"varint,5,opt,name=has_next_page,json=hasNextPage,proto3" json:"has_next_page,omitempty"`
}

func (x *PaginatedPromoRes) Reset() {
	*x = PaginatedPromoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginatedPromoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedPromoRes) ProtoMessage() {}

func (x *PaginatedPromoRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedPromoRes.ProtoReflect.Descriptor instead.
func (*PaginatedPromoRes) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{25}
}

func (x *PaginatedPromoRes) GetData() []*PromoMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PaginatedPromoRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PaginatedPromoRes) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *PaginatedPromoRes) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *PaginatedPromoRes) GetHasNextPage() bool {
	if x != nil {
		return x.HasNextPage
	}
	return false
}

type PaginatedPromoItemsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []*PromoItem `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Count       int64        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	TotalPages  int64        `protobuf:"varint,3,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	CurrentPage int64        `protobuf:"varint,4,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	HasNextPage bool         `protobuf:"varint,5,opt,name=has_next_page,json=hasNextPage,proto3" json:"has_next_page,omitempty"`
}

func (x *PaginatedPromoItemsRes) Reset() {
	*x = PaginatedPromoItemsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginatedPromoItemsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedPromoItemsRes) ProtoMessage() {}

func (x *PaginatedPromoItemsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedPromoItemsRes.ProtoReflect.Descriptor instead.
func (*PaginatedPromoItemsRes) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{26}
}

func (x *PaginatedPromoItemsRes) GetData() []*PromoItem {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PaginatedPromoItemsRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PaginatedPromoItemsRes) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *PaginatedPromoItemsRes) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *PaginatedPromoItemsRes) GetHasNextPage() bool {
	if x != nil {
		return x.HasNextPage
	}
	return false
}

type ListPromotionItemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Page string `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	Size string `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListPromotionItemsReq) Reset() {
	*x = ListPromotionItemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_products_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPromotionItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPromotionItemsReq) ProtoMessage() {}

func (x *ListPromotionItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_products_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPromotionItemsReq.ProtoReflect.Descriptor instead.
func (*ListPromotionItemsReq) Descriptor() ([]byte, []int) {
	return file_api_pb_products_proto_rawDescGZIP(), []int{27}
}

func (x *ListPromotionItemsReq) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *ListPromotionItemsReq) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *ListPromotionItemsReq) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

var File_api_pb_products_proto protoreflect.FileDescriptor

var file_api_pb_products_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x0a, 0x07, 0x75, 0x75, 0x69, 0x64, 0x4d,
	0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x07, 0x73, 0x6c, 0x75, 0x67, 0x4d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0x31, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x49, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0xdb, 0x03, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x40, 0x0a,
	0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x11, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x12,
	0x2d, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x23,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x55, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0xba, 0x02, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x53, 0x6c, 0x75, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb1, 0x05, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x5f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x69, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x52,
	0x65, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x73, 0x12, 0x3f, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x09, 0x49, 0x74,
	0x65, 0x6d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x0d, 0x49,
	0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x89, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0c, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x77, 0x0a, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x22, 0x3e, 0x0a, 0x10, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x42, 0x0a, 0x0b, 0x49, 0x74,
	0x65, 0x6d, 0x57, 0x69, 0x74, 0x68, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xb3,
	0x01, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x14, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x22, 0x31, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb4, 0x01, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0xe8, 0x01, 0x0a,
	0x0b, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x38, 0x0a, 0x0f, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x42, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xa7, 0x02, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x4d,
	0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x6c, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x73, 0x54, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x47, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6c, 0x75, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x6c, 0x75, 0x67, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x4d,
	0x73, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x90, 0x02, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x11,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x4d, 0x73, 0x67, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x22, 0x53, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x32, 0xc7, 0x04, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x35, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74,
	0x74, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x12, 0x32, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x0d,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d,
	0x73, 0x67, 0x1a, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73,
	0x67, 0x12, 0x27, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0d, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x4d, 0x73, 0x67, 0x1a, 0x0d, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x57, 0x69, 0x74, 0x68, 0x55, 0x69, 0x64, 0x1a, 0x0d, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x75, 0x75, 0x69, 0x64, 0x4d, 0x73, 0x67, 0x1a, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x47, 0x0a, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x48, 0x69,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a,
	0x08, 0x52, 0x65, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x32, 0xd9, 0x03, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3b, 0x0a,
	0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x11, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x1a,
	0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d,
	0x73, 0x67, 0x12, 0x3d, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x12, 0x42, 0x0a, 0x15, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x6c, 0x75, 0x67,
	0x4d, 0x73, 0x67, 0x1a, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6c, 0x75, 0x67,
	0x1a, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x6c, 0x75,
	0x67, 0x4d, 0x73, 0x67, 0x1a, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x39, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x73, 0x6c, 0x75, 0x67, 0x4d, 0x73, 0x67, 0x1a, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x32, 0xb6, 0x01, 0x0a,
	0x08, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x0d, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x4d, 0x73, 0x67, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67,
	0x12, 0x39, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x1a, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x13, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x1a, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x9c, 0x03, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x4d, 0x73, 0x67, 0x1a, 0x0e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x2d, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x6c, 0x75, 0x67, 0x4d, 0x73, 0x67, 0x1a, 0x0e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x57, 0x69, 0x74, 0x68,
	0x53, 0x6c, 0x75, 0x67, 0x1a, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x4d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73,
	0x6c, 0x75, 0x67, 0x4d, 0x73, 0x67, 0x1a, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4a, 0x4d, 0x55, 0x52, 0x76, 0x2f, 0x70, 0x61, 0x72, 0x2d, 0x70, 0x72, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_pb_products_proto_rawDescOnce sync.Once
	file_api_pb_products_proto_rawDescData = file_api_pb_products_proto_rawDesc
)

func file_api_pb_products_proto_rawDescGZIP() []byte {
	file_api_pb_products_proto_rawDescOnce.Do(func() {
		file_api_pb_products_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_pb_products_proto_rawDescData)
	})
	return file_api_pb_products_proto_rawDescData
}

var file_api_pb_products_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_api_pb_products_proto_goTypes = []interface{}{
	(*Empty)(nil),                  // 0: user.Empty
	(*UuidMsg)(nil),                // 1: user.uuidMsg
	(*SlugMsg)(nil),                // 2: user.slugMsg
	(*ListReq)(nil),                // 3: user.ListReq
	(*SearchReq)(nil),              // 4: user.SearchReq
	(*CategoryMsg)(nil),            // 5: user.CategoryMsg
	(*CategoryWithSlug)(nil),       // 6: user.CategoryWithSlug
	(*Filter)(nil),                 // 7: user.Filter
	(*ItemMsg)(nil),                // 8: user.ItemMsg
	(*ItemMedia)(nil),              // 9: user.ItemMedia
	(*ItemAttribute)(nil),          // 10: user.ItemAttribute
	(*RelatedProduct)(nil),         // 11: user.RelatedProduct
	(*ListCategoryItemsReq)(nil),   // 12: user.listCategoryItemsReq
	(*RelatedItemsList)(nil),       // 13: user.RelatedItemsList
	(*ItemWithUid)(nil),            // 14: user.ItemWithUid
	(*PaginatedItemRes)(nil),       // 15: user.PaginatedItemRes
	(*PaginatedCategoryRes)(nil),   // 16: user.PaginatedCategoryRes
	(*FilterListRes)(nil),          // 17: user.FilterListRes
	(*PaginatedFilterRes)(nil),     // 18: user.PaginatedFilterRes
	(*FavoriteMsg)(nil),            // 19: user.FavoriteMsg
	(*FavoriteListMsg)(nil),        // 20: user.FavoriteListMsg
	(*UserAndItemIds)(nil),         // 21: user.UserAndItemIds
	(*PromoMsg)(nil),               // 22: user.PromoMsg
	(*PromoWithSlug)(nil),          // 23: user.PromoWithSlug
	(*PromoItem)(nil),              // 24: user.PromoItem
	(*PaginatedPromoRes)(nil),      // 25: user.PaginatedPromoRes
	(*PaginatedPromoItemsRes)(nil), // 26: user.PaginatedPromoItemsRes
	(*ListPromotionItemsReq)(nil),  // 27: user.ListPromotionItemsReq
	(*timestamppb.Timestamp)(nil),  // 28: google.protobuf.Timestamp
}
var file_api_pb_products_proto_depIdxs = []int32{
	5,  // 0: user.CategoryMsg.parent_CategoryMsg:type_name -> user.CategoryMsg
	5,  // 1: user.CategoryMsg.children:type_name -> user.CategoryMsg
	8,  // 2: user.CategoryMsg.items:type_name -> user.ItemMsg
	7,  // 3: user.CategoryMsg.filters:type_name -> user.Filter
	28, // 4: user.CategoryMsg.created_at:type_name -> google.protobuf.Timestamp
	28, // 5: user.CategoryMsg.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 6: user.CategoryWithSlug.category:type_name -> user.CategoryMsg
	28, // 7: user.Filter.created_at:type_name -> google.protobuf.Timestamp
	28, // 8: user.Filter.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 9: user.ItemMsg.categories:type_name -> user.CategoryMsg
	9,  // 10: user.ItemMsg.media:type_name -> user.ItemMedia
	10, // 11: user.ItemMsg.attributes:type_name -> user.ItemAttribute
	8,  // 12: user.ItemMsg.variants:type_name -> user.ItemMsg
	11, // 13: user.ItemMsg.related_products:type_name -> user.RelatedProduct
	28, // 14: user.ItemMsg.created_at:type_name -> google.protobuf.Timestamp
	28, // 15: user.ItemMsg.updated_at:type_name -> google.protobuf.Timestamp
	28, // 16: user.ItemMedia.created_at:type_name -> google.protobuf.Timestamp
	28, // 17: user.ItemMedia.updated_at:type_name -> google.protobuf.Timestamp
	28, // 18: user.ItemAttribute.created_at:type_name -> google.protobuf.Timestamp
	28, // 19: user.ItemAttribute.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 20: user.RelatedProduct.related_item:type_name -> user.ItemMsg
	28, // 21: user.RelatedProduct.created_at:type_name -> google.protobuf.Timestamp
	28, // 22: user.RelatedProduct.updated_at:type_name -> google.protobuf.Timestamp
	11, // 23: user.RelatedItemsList.items:type_name -> user.RelatedProduct
	8,  // 24: user.ItemWithUid.item:type_name -> user.ItemMsg
	8,  // 25: user.PaginatedItemRes.data:type_name -> user.ItemMsg
	5,  // 26: user.PaginatedCategoryRes.data:type_name -> user.CategoryMsg
	7,  // 27: user.FilterListRes.data:type_name -> user.Filter
	7,  // 28: user.PaginatedFilterRes.data:type_name -> user.Filter
	8,  // 29: user.FavoriteMsg.item:type_name -> user.ItemMsg
	28, // 30: user.FavoriteMsg.created_at:type_name -> google.protobuf.Timestamp
	28, // 31: user.FavoriteMsg.updated_at:type_name -> google.protobuf.Timestamp
	19, // 32: user.FavoriteListMsg.data:type_name -> user.FavoriteMsg
	28, // 33: user.PromoMsg.lasts_to:type_name -> google.protobuf.Timestamp
	28, // 34: user.PromoMsg.created_at:type_name -> google.protobuf.Timestamp
	28, // 35: user.PromoMsg.updated_at:type_name -> google.protobuf.Timestamp
	22, // 36: user.PromoWithSlug.data:type_name -> user.PromoMsg
	8,  // 37: user.PromoItem.item:type_name -> user.ItemMsg
	28, // 38: user.PromoItem.created_at:type_name -> google.protobuf.Timestamp
	28, // 39: user.PromoItem.updated_at:type_name -> google.protobuf.Timestamp
	22, // 40: user.PaginatedPromoRes.data:type_name -> user.PromoMsg
	24, // 41: user.PaginatedPromoItemsRes.data:type_name -> user.PromoItem
	4,  // 42: user.Item.ItemSearch:input_type -> user.SearchReq
	4,  // 43: user.Item.ItemAttrSearch:input_type -> user.SearchReq
	3,  // 44: user.Item.ListItems:input_type -> user.ListReq
	8,  // 45: user.Item.CreateItem:input_type -> user.ItemMsg
	1,  // 46: user.Item.GetItem:input_type -> user.uuidMsg
	14, // 47: user.Item.UpdateItem:input_type -> user.ItemWithUid
	1,  // 48: user.Item.DeleteItem:input_type -> user.uuidMsg
	1,  // 49: user.Item.ListRelatedItems:input_type -> user.uuidMsg
	12, // 50: user.Item.listCategoryItems:input_type -> user.listCategoryItemsReq
	3,  // 51: user.Item.HitItems:input_type -> user.ListReq
	3,  // 52: user.Item.RecItems:input_type -> user.ListReq
	3,  // 53: user.Category.ListCategories:input_type -> user.ListReq
	5,  // 54: user.Category.CreateCategory:input_type -> user.CategoryMsg
	4,  // 55: user.Category.CategorySearch:input_type -> user.SearchReq
	4,  // 56: user.Category.CategoryFiltersSearch:input_type -> user.SearchReq
	2,  // 57: user.Category.GetCategory:input_type -> user.slugMsg
	6,  // 58: user.Category.UpdateCategory:input_type -> user.CategoryWithSlug
	2,  // 59: user.Category.DeleteCategory:input_type -> user.slugMsg
	2,  // 60: user.Category.ListCategoryFilters:input_type -> user.slugMsg
	1,  // 61: user.Favorite.ListFavorites:input_type -> user.uuidMsg
	21, // 62: user.Favorite.AddToFavorites:input_type -> user.UserAndItemIds
	21, // 63: user.Favorite.RemoveFromFavorites:input_type -> user.UserAndItemIds
	3,  // 64: user.Promotion.ListPromotions:input_type -> user.ListReq
	4,  // 65: user.Promotion.PromotionSearch:input_type -> user.SearchReq
	22, // 66: user.Promotion.CreatePromotion:input_type -> user.PromoMsg
	2,  // 67: user.Promotion.GetPromotion:input_type -> user.slugMsg
	23, // 68: user.Promotion.UpdatePromotion:input_type -> user.PromoWithSlug
	2,  // 69: user.Promotion.DeletePromotion:input_type -> user.slugMsg
	27, // 70: user.Promotion.ListPromotionItems:input_type -> user.ListPromotionItemsReq
	15, // 71: user.Item.ItemSearch:output_type -> user.PaginatedItemRes
	15, // 72: user.Item.ItemAttrSearch:output_type -> user.PaginatedItemRes
	15, // 73: user.Item.ListItems:output_type -> user.PaginatedItemRes
	8,  // 74: user.Item.CreateItem:output_type -> user.ItemMsg
	8,  // 75: user.Item.GetItem:output_type -> user.ItemMsg
	8,  // 76: user.Item.UpdateItem:output_type -> user.ItemMsg
	8,  // 77: user.Item.DeleteItem:output_type -> user.ItemMsg
	13, // 78: user.Item.ListRelatedItems:output_type -> user.RelatedItemsList
	15, // 79: user.Item.listCategoryItems:output_type -> user.PaginatedItemRes
	15, // 80: user.Item.HitItems:output_type -> user.PaginatedItemRes
	15, // 81: user.Item.RecItems:output_type -> user.PaginatedItemRes
	16, // 82: user.Category.ListCategories:output_type -> user.PaginatedCategoryRes
	5,  // 83: user.Category.CreateCategory:output_type -> user.CategoryMsg
	16, // 84: user.Category.CategorySearch:output_type -> user.PaginatedCategoryRes
	18, // 85: user.Category.CategoryFiltersSearch:output_type -> user.PaginatedFilterRes
	5,  // 86: user.Category.GetCategory:output_type -> user.CategoryMsg
	5,  // 87: user.Category.UpdateCategory:output_type -> user.CategoryMsg
	0,  // 88: user.Category.DeleteCategory:output_type -> user.Empty
	17, // 89: user.Category.ListCategoryFilters:output_type -> user.FilterListRes
	20, // 90: user.Favorite.ListFavorites:output_type -> user.FavoriteListMsg
	19, // 91: user.Favorite.AddToFavorites:output_type -> user.FavoriteMsg
	0,  // 92: user.Favorite.RemoveFromFavorites:output_type -> user.Empty
	25, // 93: user.Promotion.ListPromotions:output_type -> user.PaginatedPromoRes
	25, // 94: user.Promotion.PromotionSearch:output_type -> user.PaginatedPromoRes
	22, // 95: user.Promotion.CreatePromotion:output_type -> user.PromoMsg
	22, // 96: user.Promotion.GetPromotion:output_type -> user.PromoMsg
	22, // 97: user.Promotion.UpdatePromotion:output_type -> user.PromoMsg
	0,  // 98: user.Promotion.DeletePromotion:output_type -> user.Empty
	26, // 99: user.Promotion.ListPromotionItems:output_type -> user.PaginatedPromoItemsRes
	71, // [71:100] is the sub-list for method output_type
	42, // [42:71] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_api_pb_products_proto_init() }
func file_api_pb_products_proto_init() {
	if File_api_pb_products_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_pb_products_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UuidMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlugMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryWithSlug); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCategoryItemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedItemsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemWithUid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginatedItemRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginatedCategoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginatedFilterRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAndItemIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoWithSlug); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginatedPromoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginatedPromoItemsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_products_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPromotionItemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_pb_products_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_api_pb_products_proto_goTypes,
		DependencyIndexes: file_api_pb_products_proto_depIdxs,
		MessageInfos:      file_api_pb_products_proto_msgTypes,
	}.Build()
	File_api_pb_products_proto = out.File
	file_api_pb_products_proto_rawDesc = nil
	file_api_pb_products_proto_goTypes = nil
	file_api_pb_products_proto_depIdxs = nil
}
